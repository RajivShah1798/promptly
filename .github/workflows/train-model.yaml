name: Run Kaggle Notebook

on:
  push:
    branches: ["model-training"]

jobs:
  train_model:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Kaggle API
        run: |
          mkdir -p ~/.kaggle
          echo "{\"username\":\"${{ secrets.KAGGLE_USERNAME }}\",\"key\":\"${{ secrets.KAGGLE_KEY }}\"}" > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json
          echo "Keys configuration is succeeded!"

      - name: Install Kaggle CLI
        run: |
          echo "Installing Kaggle CLI!"
          pip install kaggle

      # - name: Push Kaggle Notebook
      #   run: |
      #     kaggle kernels push -p model_pipeline/training/promptly-finetuning.ipynb
      #     sleep 10 # Wait for notebook to be available
      #     kaggle kernels status rajivshah8197/promptly-finetuning

      - name: Trigger Kaggle Notebook Execution
        run: |
          NOTEBOOK_SLUG="rajivshah8197/promptly-finetuning"

          # Check Kaggle Notebook Status (Ensuring API works)
          echo "Checking current status of the notebook..."
          kaggle kernels status $NOTEBOOK_SLUG || { echo " Failed to fetch status. Check notebook slug."; exit 1; }

          # Extract API Key
          KAGGLE_KEY=$(jq -r .key ~/.kaggle/kaggle.json)

          if [[ -z "$KAGGLE_KEY" ]]; then
            echo " Kaggle API key is missing!"
            exit 1
          fi

          # Push and Send
          kaggle kernels push -p model_pipeline/training/promptly-finetuning.ipynb

          echo "Begin executing model training"
          sleep 60


      - name: Wait for Training Completion
        run: |
          while [[ "$(kaggle kernels status rajivshah8197/promptly-finetuning | grep -c 'running')" -ne 0 ]]; do
            echo "Waiting for training to complete..."
            sleep 60
          done
          echo "Training Completed!"
